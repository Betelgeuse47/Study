#include <iostream>
#include <cstdio>
#define MaxInt 32767
#define M 6
typedef char VerTexType;
typedef int ArcType;
using namespace std;

void put(AMGraph G)
{
    int a,b;
    for(a=0;a<M;a++)
    {
        for(b=0;b<M;b++)
        cin<<G.arcs[a][b]<<endl;
    }
}

typedef struct{
    VerTexType vexs[M];
    ArcType arcs[M][M];
    int vexnum=6,arcnum=8;
}AMGraph;


void shortestpath_DIJ(AMGraph G,int v0)
{

    n=G.vexnum;
    for(v=0;v<n;++v)
    {
        S[v]=false;
        D[v]=G.arcs[v0][v];
        if(D[v]<MaxInt) Path[v]=v0;
        else Path[v]=-1;
    }
    S[v0]=true;
    D[v0]=0;
    for(i=1;i<n;++i)
    {
        min=MaxInt;
        for(w=0;w<n,++w)
            if(!S[w]&&D[w]<min)
        {
            v=w;min=D[w];
        }
        S[v]=true;
        for(w=0;w<n;++w)
            if(!S[w]&&(D[v]+G.arcs[v][w]<D[w]))
        {
            D[w]=D[v]+G.arcs[v][w];
            Path[w]=v;
        }
    }
}

int main()
{
  AMGraph G;
  put(AMGraph G);
  int S[M],D[M],Path[M];
  int v0;
  
}
